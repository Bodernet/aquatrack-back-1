{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack",
    "description": "The API for GoIT project - AquaTrack. Team 1",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000/api" },
    { "url": "https://aquatrack-back-1.onrender.com/api" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User sign up",
        "requestBody": {
          "description": "Signup's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful sign up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "404": {
            "description": "Service not found"
          },
          "409": {
            "description": "Such email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User sign in",
        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful sign in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Email or password invalid"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful get current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/current/refresh": {
      "get": {
        "tags": ["Users"],
        "summary": "Refresh user's token",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful refresh current user's token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRefreshCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign out user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful sign out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Signin's object",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Users"],
        "summary": "Verify user email",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Verification token for user email"
          }
        ],
        "responses": {
          "200": {
            "description": "Email successfully verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email successfully verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Verify resend",
        "requestBody": {
          "description": "Verify resend request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyResendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful verifyid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResendResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Verification failed"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user avatar",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful update of user avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "schema": {
                    "$ref": "#/components/schemas/AvatarUpdateResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You must add a file"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water entry",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object to add water entry",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful addition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": ["Water"],
        "summary": "Update water entry",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water entry"
          }
        ],
        "requestBody": {
          "description": "Object to update water entry",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Entry not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Water"],
        "summary": "Delete water entry",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water entry"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Entry not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/daily": {
      "get": {
        "tags": ["Water"],
        "summary": "Get daily water entries",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-06-26"
            },
            "description": "Date to get entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailyWaterResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/water/monthly": {
      "get": {
        "tags": ["Water"],
        "summary": "Get monthly water entries",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 6
            },
            "description": "Month to get entries"
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 2024
            },
            "description": "Year to get entries"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonthlyWaterResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "$ref": "#/components/examples/users/email"
          },
          "password": {
            "$ref": "#/components/examples/users/password"
          }
        }
      },
      "SignUpResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "$ref": "#/components/examples/users/email"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "example@gmail.com"
          }
        }
      },
      "SignInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "$ref": "#/components/examples/users/email"
          },
          "password": {
            "$ref": "#/components/examples/users/password"
          }
        }
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "gender": {
            "$ref": "#/components/examples/users/gender"
          },
          "name": {
            "$ref": "#/components/examples/users/name"
          },
          "email": {
            "$ref": "#/components/examples/users/email"
          },
          "weight": {
            "$ref": "#/components/examples/users/weight"
          },
          "activeTimeSports": {
            "$ref": "#/components/examples/users/activeTimeSports"
          },
          "waterDrink": {
            "$ref": "#/components/examples/users/waterDrink"
          },
          "avatarURL": {
            "$ref": "#/components/examples/users/avatarURL"
          }
        },
        "example": {
          "user": {
            "gender": "male",
            "name": "John Doe",
            "email": "example@gmail.com",
            "weight": 70,
            "activeTimeSports": 5,
            "waterDrink": 2,
            "avatarURL": "//www.gravatar.com/avatar/c951f1265ed645cea2c372ecd9672f5f"
          }
        }
      },
      "GetCurrentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "$ref": "#/components/examples/users/userId"
            },
            "name": {
              "$ref": "#/components/examples/users/name"
            },
            "email": {
              "$ref": "#/components/examples/users/email"
            },
            "token": {
              "$ref": "#/components/examples/users/token"
            },
            "gender": {
              "$ref": "#/components/examples/users/gender"
            },
            "weight": {
              "$ref": "#/components/examples/users/weight"
            },
            "waterDrink": {
              "$ref": "#/components/examples/users/waterDrink"
            },
            "activeTimeSports": {
              "$ref": "#/components/examples/users/activeTimeSports"
            },
            "avatarURL": {
              "$ref": "#/components/examples/users/avatarURL"
            }
          }
        }
      },
      "GetRefreshCurrentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "userId": {
              "$ref": "#/components/examples/users/userId"
            },
            "name": {
              "$ref": "#/components/examples/users/name"
            },
            "email": {
              "$ref": "#/components/examples/users/email"
            },
            "token": {
              "$ref": "#/components/examples/users/token"
            },
            "gender": {
              "$ref": "#/components/examples/users/gender"
            },
            "weight": {
              "$ref": "#/components/examples/users/weight"
            },
            "waterDrink": {
              "$ref": "#/components/examples/users/waterDrink"
            },
            "activeTimeSports": {
              "$ref": "#/components/examples/users/activeTimeSports"
            },
            "avatarURL": {
              "$ref": "#/components/examples/users/avatarURL"
            }
          }
        }
      },
      "SignOutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/examples/users/messageSignOut"
          }
        }
      },
      "UpdateRequest": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/components/examples/users/name"
            },
            "email": {
              "$ref": "#/components/examples/users/email"
            },
            "gender": {
              "$ref": "#/components/examples/users/gender"
            },
            "weight": {
              "$ref": "#/components/examples/users/weight"
            },
            "waterDrink": {
              "$ref": "#/components/examples/users/waterDrink"
            },
            "activeTimeSports": {
              "$ref": "#/components/examples/users/activeTimeSports"
            },
            "avatarURL": {
              "$ref": "#/components/examples/users/avatarURL"
            }
          }
        }
      },
      "UpdateResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "$ref": "#/components/examples/users/name"
            },
            "email": {
              "$ref": "#/components/examples/users/email"
            },
            "gender": {
              "$ref": "#/components/examples/users/gender"
            },
            "weight": {
              "$ref": "#/components/examples/users/weight"
            },
            "waterDrink": {
              "$ref": "#/components/examples/users/waterDrink"
            },
            "activeTimeSports": {
              "$ref": "#/components/examples/users/activeTimeSports"
            },
            "avatarURL": {
              "$ref": "#/components/examples/users/avatarURL"
            }
          }
        }
      },
      "VerifyByEmailResponse": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/examples/users/messageVerify"
          }
        }
      },
      "VerifyResendRequest": {
        "type": "object",
        "required": ["true"],
        "properties": {
          "email": {
            "$ref": "#/components/examples/users/email"
          }
        }
      },
      "VerifyResendResponse": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/examples/users/messageVerify"
          }
        }
      },
      "AvatarUpdateResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "$ref": "#/components/examples/users/avatarURL"
          }
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["volume"],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Entry date",
            "example": "2024-06-26"
          },
          "volume": {
            "type": "number",
            "description": "Volume of water in liters",
            "example": 1.5
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Entry ID",
            "example": "64b1e25f6b0a2ccb95591ec7"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Entry date",
            "example": "2024-06-26"
          },
          "volume": {
            "type": "number",
            "description": "Volume of water in liters",
            "example": 1.5
          },
          "user": {
            "type": "string",
            "description": "User ID",
            "example": "64b1e25f6b0a2ccb95591ec7"
          }
        }
      },
      "UpdateWaterRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Entry date",
            "example": "2024-06-26"
          },
          "volume": {
            "type": "number",
            "description": "Volume of water in liters",
            "example": 1.8
          }
        }
      },
      "UpdateWaterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Entry ID",
            "example": "64b1e25f6b0a2ccb95591ec7"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Entry date",
            "example": "2024-06-26"
          },
          "volume": {
            "type": "number",
            "description": "Volume of water in liters",
            "example": 1.8
          },
          "user": {
            "type": "string",
            "description": "User ID",
            "example": "64b1e25f6b0a2ccb95591ec7"
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message for successful deletion",
            "example": "Entry deleted successfully"
          }
        }
      },
      "GetDailyWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Entry ID",
              "example": "64b1e25f6b0a2ccb95591ec7"
            },
            "date": {
              "type": "string",
              "format": "date",
              "description": "Entry date",
              "example": "2024-06-26"
            },
            "volume": {
              "type": "number",
              "description": "Volume of water in liters",
              "example": 1.5
            },
            "user": {
              "type": "string",
              "description": "User ID",
              "example": "64b1e25f6b0a2ccb95591ec7"
            }
          }
        }
      },
      "GetMonthlyWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Entry ID",
              "example": "64b1e25f6b0a2ccb95591ec7"
            },
            "date": {
              "type": "string",
              "format": "date",
              "description": "Entry date",
              "example": "2024-06-26"
            },
            "volume": {
              "type": "number",
              "description": "Volume of water in liters",
              "example": 1.5
            },
            "user": {
              "type": "string",
              "description": "User ID",
              "example": "64b1e25f6b0a2ccb95591ec7"
            }
          }
        }
      }
    },
    "examples": {
      "users": {
        "email": {
          "type": "string",
          "description": "User's email",
          "format": "email"
        },
        "password": {
          "type": "string",
          "description": "User's password",
          "example": "qwerty123"
        },
        "token": {
          "type": "string",
          "description": "User's token",
          "example": "Abcd1234"
        },
        "refreshToken": {
          "type": "string",
          "description": "User's token",
          "example": "Abcd1234"
        },
        "userId": {
          "type": "string",
          "description": "User's id",
          "example": "64b1e25f6b0a2ccb95591ec7"
        },
        "name": {
          "type": "string",
          "description": "User's name",
          "example": "Devid"
        },
        "messageSignOut": {
          "type": "string",
          "description": "Sign out success",
          "example": "Sign out success"
        },
        "gender": {
          "type": "string",
          "description": "User's gender",
          "example": "Woman"
        },
        "weight": {
          "type": "number",
          "description": "User's weight",
          "example": 0
        },
        "activeTimeSports": {
          "type": "number",
          "description": "User's active time in sports",
          "example": 0
        },
        "waterDrink": {
          "type": "number",
          "description": "User's daily water intake in liters",
          "example": 1.8
        },
        "avatarURL": {
          "type": "string",
          "description": "User's avatar URL",
          "example": "//www.gravatar.com/avatar/c951f1265ed645cea2c372ecd9672f5f"
        },
        "messageVerify": {
          "type": "string",
          "description": "Verifying success",
          "example": "Verifying success"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
